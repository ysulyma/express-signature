// Generated by LiveScript 1.2.0
(function(){
  var toString$ = {}.toString;
  function signature(sig){
    return function(req, res, next){
      if (validateObject(sig)(req)) {
        return next();
      } else {
        return next({
          status: 401
        });
      }
    };
  }
  module.exports = signature;
  /* built-in validations */
  function validateObject(sig){
    return function(o){
      var key;
      for (key in sig) {
        switch (toString$.call(sig[key]).slice(8, -1)) {
        case 'Object':
          if (!validateObject(sig[key])(o[key])) {
            return false;
          }
          break;
        case 'String':
          if (!o[key]) {
            return false;
          }
          o[key] = (fn$());
          break;
        case 'RegExp':
          if (!(o[key] && o[key].match(sig[key]))) {
            return false;
          }
          break;
        case 'Function':
          if (!sig[key](o[key])) {
            return false;
          }
        }
      }
      return true;
      function fn$(){
        switch (sig[key]) {
        case 'double':
        case 'float':
          return parseFloat(o[key]);
        case 'int':
        case 'integer':
          return parseInt(o[key]);
        default:
          return o[key];
        }
      }
    };
  }
}).call(this);
